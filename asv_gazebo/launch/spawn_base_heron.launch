<?xml version="1.0"?>
<!--
Software License Agreement (BSD)

\file      heron_sim.launch
\authors   Guy Stoppi <gstoppi@clearpathrobotics.com>
\copyright Copyright (c) 2018, Clearpath Robotics, Inc., All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted provided that
the following conditions are met:
 * Redistributions of source code must retain the above copyright notice, this list of conditions and the
   following disclaimer.
 * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
   following disclaimer in the documentation and/or other materials provided with the distribution.
 * Neither the name of Clearpath Robotics nor the names of its contributors may be used to endorse or promote
   products derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WAR-
RANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, IN-
DIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->
<launch>

  <rosparam param="/use_sim_time">true</rosparam>

  <!-- Vehicle's initial pose -->
  <arg name="x"     default="0"/>
  <arg name="y"     default="0"/>
  <arg name="z"     default="0.14"/>
  <arg name="roll"  value="0"/>
  <arg name="pitch" value="0"/>
  <arg name="yaw"   default="0"/>
  <arg name="config" default="base" />

    <!--
      The filter needs MagneticField messages, so start a node to translate from the Vector3Stamped messages
      provided by the plugin
    -->
    <!-- <node pkg="heron_gazebo" type="vector3_to_magnetic_field" name="mag_translation">
      <remap from="mag_in"    to="imu/mag_raw" />
      <remap from="mag_out"   to="imu/mag" />
    </node> -->

    <!-- Translate Imu's quaternion to Roll/Pitch/Yaw -->
    <!-- <node pkg="heron_gazebo" type="rpy_translator" name="rpy_translator" /> -->

    <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" output="screen"
          args="-urdf -x $(arg x) -y $(arg y) -z $(arg z)
                      -R $(arg roll) -P $(arg pitch) -Y $(arg yaw)
                      -model heron -param /robot_description"/>

    <!-- Translates navsat/velocity from Vector3Stamped to TwistStamped on navsat/vel -->
    <!-- <node pkg="heron_gazebo" type="navsat_vel_translate" name="navvel_translate" /> -->


  <!-- Launches Heron's description nodes -->
  <param name="robot_description"
        command="$(find asv_gazebo)/launch/env_run $(find asv_gazebo)/urdf/configs/base
                $(find xacro)/xacro '$(find asv_gazebo)/urdf/heron.urdf.xacro'
                debug:=0 simulation:=true" />

  <!-- Publish robot model for ROS -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />

  <!-- Thruster interface to work with the Vortex-ASV allocator -->
  <node name="thruster_interface" pkg="thruster_interface" type="thruster_interface_node.py" output="screen"/>
</launch>
